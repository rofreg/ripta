<h2>Route <%= @trip.route_id %> to <%= @trip.headsign %></h2>
<% if @delay %>
  <h4>
    <% if @delay > 0 %>
      Delayed by <%= @delay / 60 %> minutes
    <% elsif @delay < 0 %>
      <%= @delay.abs / 60 %> minutes ahead of schedule
    <% else %>
      On time
    <% end %>
  </h4>
<% end %>
<div id="map"></div>

<% if @stop_time_updates&.any? %>
  <h2>Upcoming stops</h2>
  <table>
    <tr>
      <th>ETA</th>
      <th>Stop</th>
    </tr>
    <% @stop_time_updates.each do |stop_time| %>
      <% time = stop_time.arrival_time || stop_time.departure_time %>
      <tr class="live">
        <td class="time">
          <% if time.nil? %>
            Follow link for details ➡
          <% elsif time - Time.now <= -60 %>
            Departed
          <% elsif time - Time.now <= 30 %>
            Arriving now
          <% elsif time - Time.now <= 90 %>
            1 minute away
          <% elsif time - Time.now <= 600 %>
            <%= ((time - Time.now) / 60).round %> minutes away
          <% else %>
            <%= time.strftime("%l:%M%P") %>
          <% end %>
        </td>
        <td>
          <a href="/stops/<%= stop_time.stop_id %>"><%= stop_time.stop&.name || '[Stop name unknown]' %></a>
        </td>
      </tr>
    <% end %>
  </table>
<% end %>

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.2/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.0.2/dist/leaflet.js"></script>

<%# TODO: fix colors %>
<% colors = @trip.stop_times.collect{|st| @stop_time_updates&.find{|stu| stu.stop_id == st.stop_id} ? "#f00" : "#f00"} %>
<% destination_stop = @trip.stop_times.last.stop %>

<script>
  var busIcon = L.icon({
    iconUrl: '/images/bus_marker_small.png',
    iconSize:     [50, 71], // size of the icon
    iconAnchor:   [24, 71], // point of the icon which will correspond to marker's location
    popupAnchor:  [24, 100]  // point from which the popup should open relative to the iconAnchor
  });

  var destIcon = L.icon({
    iconUrl: '/images/dest_marker_small.png',
    iconSize:     [50, 71], // size of the icon
    iconAnchor:   [24, 71], // point of the icon which will correspond to marker's location
    popupAnchor:  [24, 100]  // point from which the popup should open relative to the iconAnchor
  });

  var mymap = new L.Map('map');

  var osmUrl='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
  var osmAttrib='Map data © <a href="http://openstreetmap.org">OpenStreetMap</a> contributors';
  var osm = new L.TileLayer(osmUrl, {minZoom: 8, maxZoom: 19, attribution: osmAttrib});

  mymap.setView(new L.LatLng(41.825017, -71.411064), 9);
  mymap.addLayer(osm);

  // Draw our route line
  var path = [];
  <% @trip.shapes.ordered.each do |s| %>
    path.push (L.latLng(<%= s.latitude %>, <%= s.longitude %>));
  <% end %>
  var polyline = L.polyline(path, {color: '#f00'}).addTo(mymap);

  <% if @vehicle_position %>
    // Draw the vehicle position
    var marker = L.marker([<%= @vehicle_position.latitude %>, <%= @vehicle_position.longitude %>], {icon: busIcon}).addTo(mymap);
  <% end %>

  // Draw the destination
  var marker = L.marker([<%= destination_stop.latitude %>, <%= destination_stop.longitude %>], {icon: destIcon}).addTo(mymap);

  // Draw the stops
  <% @trip.stops.each_with_index do |s, index| %>
    L.circleMarker(L.latLng(<%= s.latitude %>, <%= s.longitude %>), {
      color: <%= colors[index].to_json %>,
      fillColor: <%= colors[index].to_json %>,
      fillOpacity: 0.7,
      radius: 4
    }).addTo(mymap);
  <% end %>

  mymap.fitBounds(path);
  mymap.setZoomAround(mymap.getCenter(), mymap.getZoom());
</script>
